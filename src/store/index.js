import Vue from 'vue'
import Vuex from 'vuex'

Vue.use(Vuex)

export default new Vuex.Store({
  state: {
    isLogin: false,
    footWords: "Just do something you like !",
    edition: "2020.8.8",
    story: {
      progress1: {
        title: "2019年",
        text: "恍然看到B站一个博主敲代码，实现网页制作，感觉很神奇，开始对前端技术产生了浓厚的兴趣，然后开始了前端之HTML的学习，但进度非常缓慢。"
      },
      progress2: {
        title: "2020年3月",
        text: "跟随网友们的建议，我直接跳过了前端之JS的学习，来到了所谓前端必学的Vue框架，误以为框架可以代替JS。好在基于有一定的C语言基础，当时Vue大致也能听懂。"
      },
      progress3: {
        title: "2020年6月",
        text: "有志将对于前端的兴趣变为工作，开始找实习，但是并不顺利。很多面试官要求必须会JS。"
      },
      progress4: {
        title: "2020年7月",
        text: "接触到一本名叫《Javascript忍者秘籍》的书籍，开启了JS的学习。渐渐发现JS大有宝藏，并豁然开朗。"
      },
      progress5: {
        title: "2020年8月初",
        text: "我开始创建这个博客，毕竟“实践是检验真理的唯一标准”，另外我也想给或许同为热爱前端技术的你提供一些力所能及地帮助，博客大致上算一个技术博客。也希望你能与我交流经验，或者提出指正。"
      },
      progress6: {
        title: "2020年9月后",
        text: "我将开启我的大四，希望秋招能够一切顺利吧！"
      },
      progress7: {
        title: "“我”是这样来的"
      },
      progress8: {
        title: "未完待续……"
      }
    },
    callMe: {
      progress1: {
        title: "学习阻碍",
        text: "在学习的过程中，刚开始我倾向于在强大的B站上跟视频学习，过程中往往会出现例如老师为什么这里这样去写代码等等引出更加细致的问题，但本质上问题可能却只是一个很简单的知识概念，老师默认你会，默认你知道，所以这时我们就需要自己去查阅资料，在网上寻求解决办法。但是我在查阅过程中发现，网友众说纷纭，此时又出现了新的问题——我该相信谁啊？"
      },
      progress2: {
        title: "高效捷径",
        text: "为此我想做一个博客，欲求用最简短的篇幅，来展示问题及问题的解决办法，让你能够快速的解决貌似很难的前端技术问题，如果有精力的话，后续我可能也会加入一些前端技术的知识点，当然以上全部都是我会的，如果提供的文章有问题，那么我也非常欢迎您的指正，文末我将附上我的联系方式。"
      },
      progress3: {
        title: "共同进步",
        text: "从接触到前端技术以来，兴趣愈发浓郁，我也想通过这个博客结识更多的前端大佬或者像我一样正在学习前端技术的人儿，我们几个程序猴子一起交流经验，共同进步吧！"
      },
      progress4: {
        title: "Call我"
      },
    },
    notice: {
      progress1: {
        title: "有幸你能点开我的博客",
        text: "在此我再次感谢您能来到我的博客，但是我们丑话说在前头哈，此博客不能保证你能成为一名前端“金牌选手”，但是要说入门的话，应该还是行的，另外，因为我学习笔记有几万字加上图片，如果要全部展示到博客上，工程量还是有点大，一时半会儿要搞出来的话脑瓜子是“嗡嗡的”，所以我打算还是陆续更新吧！谢谢支持!"
      },
      progress2: {
        title: "关于博客展示内容",
        text: "因为在前端开发的过程中，部分问题的解决并不是通用的，有时会基于具体的语法语境，而对应不同的解决办法，所以为了方便大家我展示的一般都是通用的办法，需要基于语境的我一般不展示。"
      },
      progress3: {
        title: "关于文章可靠性",
        text: "博主承诺，所有文章的内容都是自己亲手实操过的，并且确实是达到了效果的。如果我提供的方案并没有解决你的问题，那么请点击登录页上的“交流”，里面有本人的联系方式，期待你能与我讨论，如果讨论过后出现了新的解决办法，那么我将会在后台传入数据，对新的思路进行附加展示。"
      },
      progress4: {
        title: "关于做最坏的打算",
        text: "俗话说的好啊，“智者千虑必有一失”，当然只是举个例子，本人不算啥智者，铁憨憨还是可以勉强算得，哈哈哈。之所以这么说啊，那是因为我担心众多文章里面就有一篇文章有问题，那么我希望你对我说“娃儿嘞，你这里错老，要这样改一下”，而不是“你搞啥子哟，乱讲，打死你哟”，"
      },
      progress5: {
        title: "到此结束，散会……",
      },
    },
    home: {
      progress1: {
        title: "HTML",
        text: "HTML是入门前端必备基础，包含了组成web应用的基本元素，例如img图片元素，p文本元素等，总而言之，HTML是向web应用中注入内容的主要手段之一。"
      },
      progress2: {
        title: "CSS",
        text: "CSS是给你的web应用增光添彩的必备法宝，干巴巴的文本或者图片等组成的web应用毕竟不好看，我们可以通过CSS布局的你的HTML元素在web界面中的位置，并为它添加一些样式，例如背景，阴影等，更加激动人心的是CSS3的一些特性还可以实现一些用户交互。例如鼠标移入元素，元素样式发生改变等，例外CSS的动画、过渡与变形会让你的web应用更加灵动。"
      },
      progress3: {
        title: "JS",
        text: "学完前面俩“兄弟”，你再来到JS，你会发现JS就是web应用的灵魂，相比组成身体的HTML+CSS，他的优势就在于能操控这两者，实现与用户的交互，通俗的说，就是JS可以为web应用添加各种各样的的功能，让它不仅仅限于展示内容。"
      },
      progress4: {
        title: "Vue",
        text: "一个大佬研发的前端框架，对于我来说最直观的感受就是大大的提高了前端项目的性能，大大提升了项目的效率，原本完成一个逻辑可能需要很多行JS才能完成，但通过vue的一些基本语法就可以用简短的一个关键字替换，也能达到一样的效果。对于前端来说学一个Vue框架还是有必要的。"
      },
    },
  },
  getters: {
  },
  mutations: {
    isLogin(state) {
      state.isLogin = true
    }
  },
  actions: {
    aIsLogin(context, payload) {    //context译为内容，在前端中一般称为上下文   必须继承
      setTimeout(() => {
        context.commit('isLogin')
        console.log(payload.message)
        console.log(payload)
        payload.success()
      },10)
    }
  },
  modules: {
  }
})
